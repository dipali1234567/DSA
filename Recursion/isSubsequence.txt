
https://leetcode.com/problems/is-subsequence/

Given two strings s and t, return true if s is a subsequence of t, or false otherwise.

A subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).


Input: s = "abc", t = "ahbgdc"
Output: true

Input: s = "axc", t = "ahbgdc"
Output: false

  public boolean isSubsequence(String s, String t) {
  if(s.isEmpty())
      return true;
        
        int k=0;
        int n=s.length();
        for(int i=0;i<t.length();i++)
        {
            if(s.charAt(k)==t.charAt(i))
            {
                k++;
                if(k==n)
                    break;
            }
        }
        
        if(k!=n)
            return false;
        
        return true;
    }
}






































//class Solution {
    static void findSub(int index,int n,ArrayList<String>subsequence,String s,String temp)
    {
        if(index==n)
        {
            subsequence.add(temp);
            return;
        }
        
        temp+=s.charAt(index);
        findSub(index+1,n,subsequence,s,temp);
        temp=temp.substring(0,temp.length()-1);
        findSub(index+1,n,subsequence,s,temp);
        
    }
    
    public boolean isSubsequence(String s, String t) {
        ArrayList<String>subsequence=new ArrayList<>();
        
        findSub(0,t.length(),subsequence,t,"");
        
        if(subsequence.contains(s))
            return true;
        
        return false;
        
        
    }
}